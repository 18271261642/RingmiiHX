apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
def andr = rootProject.ext.android

android {
    signingConfigs {
        debug {
            storeFile file('./guider.jks')//签名文件路径
            storePassword "GuiderHealth.com"
            keyAlias "guider"
            keyPassword "GuiderHealth.com"  //签名密码
            println("====== signingConfigs.debug ======")
        }
        release {
            storeFile file('./guider.jks')//签名文件路径
            storePassword "GuiderHealth.com"
            keyAlias "guider"
            keyPassword "GuiderHealth.com"  //签名密码
            println("====== signingConfigs.release ======")
        }
    }
    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
    }
    compileSdkVersion andr.compileSdkVersion
    defaultConfig {
        multiDexEnabled true
//        applicationId "com.guider.mcuband"
        minSdkVersion andr.minSdkVersion
        targetSdkVersion andr.targetSdkVersion
        versionCode rootProject.ext.codeVersion
        versionName rootProject.ext.appVersion
        flavorDimensions "versionName"
        manifestPlaceholders = [
                qq_id: "101357650"
        ]


        ndk {
            // abiFilters 'armeabi','armeabi-v7a', 'x86','x86_64','arm64-v8a'
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            shrinkResources false
            // 区分是否是国际版本
            buildConfigField("boolean", "GOOGLEPLAY", "${rootProject.googlePlay}")
            if (rootProject.isMcu) {
                buildConfigField("String", "WEBDOMAIN", '"https://apphealth.mcu.edu.tw/"')
                buildConfigField("String", "CMATEWEBDOMAIN", '"https://camtehealth.mcu.edu.tw/"')
                buildConfigField("boolean", "SOSISOPENTAG", "false")
            } else if (rootProject.googlePlay) { // 国际版
                buildConfigField("String", "WEBDOMAIN", '"https://app.guidertech.com/"')
                buildConfigField("String", "CMATEWEBDOMAIN", '"https://cmate.guidertech.com/"')
                buildConfigField("boolean", "SOSISOPENTAG", "false")
            } else { // 大陆版
                buildConfigField("String", "WEBDOMAIN", '"https://app.guidertech.com/"')
                buildConfigField("String", "CMATEWEBDOMAIN", '"https://cmate.guidertech.com/"')
                buildConfigField("boolean", "SOSISOPENTAG", "false")
            }
        }
        release {
            debuggable false
            jniDebuggable false
            zipAlignEnabled true
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            // 区分是否是国际版本
            buildConfigField("boolean", "GOOGLEPLAY", "${rootProject.googlePlay}")
            if (rootProject.isMcu) {
                buildConfigField("String", "WEBDOMAIN", '"https://apphealth.mcu.edu.tw/"')
                buildConfigField("String", "CMATEWEBDOMAIN", '"https://camtehealth.mcu.edu.tw/"')
                buildConfigField("boolean", "SOSISOPENTAG", "false")
            } else if (rootProject.googlePlay) { // 国际版
                buildConfigField("String", "WEBDOMAIN", '"https://app.guidertech.com/"')
                buildConfigField("String", "CMATEWEBDOMAIN", '"https://cmate.guidertech.com/"')
                buildConfigField("boolean", "SOSISOPENTAG", "false")
                println "app -- Package Google Play Bundle Release . . ."
            } else { // 大陆版
                buildConfigField("String", "WEBDOMAIN", '"https://app.guidertech.com/"')
                buildConfigField("String", "CMATEWEBDOMAIN", '"https://cmate.guidertech.com/"')
                buildConfigField("boolean", "SOSISOPENTAG", "false")
                println "app -- Package CN Bundle Release . . ."
            }
        }
    }
    greendao {
        schemaVersion 6
        daoPackage 'com.afa.tourism.greendao.gen'
        targetGenDir 'src/main/java'
    }
    repositories {
        flatDir {
            dirs 'libs', "../bpm1000/libs", "../common_m500_1000/libs"
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/java/locate', 'src/main/java/GetLocation']
            jniLibs.srcDir 'libs'
            jni.srcDirs = []
            assets {
                srcDirs 'src/main/assets'
            }
        }

        app_guider_mcu {
            res.srcDirs = ['src/main/res-mcu']
        }
    }

    useLibrary 'org.apache.http.legacy'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    // 3.0Gradle开始必须添加纬度
    flavorDimensions "default"
    // 多渠道打包配置
    productFlavors {
        // HEALTH 0 运动， 1 横板健康， 2 竖版无创
        // 盖德默认应用
        app_guider {
            applicationId "com.guider.healthringx"
            manifestPlaceholders = [
                    app_name     : "@string/the_app_name",
                    channel      : "app_guider",
                    app_icon     : "@drawable/ic_gaide_launch",
                    running_label: "@string/running"
            ]
            buildConfigField("int", "HEALTH", "0")
            buildConfigField("String", "MAC", '"11:11:11:11:11:12"')
            buildConfigField("String", "LINE_APP_ID", '"1653887386"')
        }

        // 盖德添加健康应用
        app_guider_health {
            applicationId "com.guider.healthringx"
            manifestPlaceholders = [
                    app_name     : "@string/the_app_name",
                    channel      : "app_guider_health",
                    app_icon     : "@drawable/ic_gaide_launch",
                    running_label: "@string/btn_health"
            ]
            buildConfigField("int", "HEALTH", "1")
            buildConfigField("String", "MAC", '"11:11:11:11:11:14"')
            buildConfigField("String", "LINE_APP_ID", '"1653887386"')
        }

        // Vigori Mate 第三方兼容，健康改为竖版无创
        app_vigori_mate {
            applicationId "com.guider.healthringx"
            manifestPlaceholders = [ 
                    app_name     : "Vigori Mate",
                    channel      : "app_vigori_mate",
                    app_icon     : "@drawable/ic_vigori_icon",
                    running_label: "@string/btn_health"
            ]
            buildConfigField("int", "HEALTH", "2")
            buildConfigField("String", "MAC", '"11:11:11:11:11:13"')
            buildConfigField("String", "LINE_APP_ID", '"1653887386"')
        }
        // mcu手環
        app_guider_mcu {
            applicationId "com.mcu.healthringx"
            manifestPlaceholders = [
                    app_name     : "MCU手環",
                    channel      : "app_guider_mcu",
                    app_icon     : "@drawable/icon_mcu",
                    running_label: "@string/btn_health"
            ]
            buildConfigField("int", "HEALTH", "1")
            buildConfigField("String", "MAC", '"11:11:11:11:11:15"')
            buildConfigField("String", "LINE_APP_ID", '"1655271017"')
        }
    }
}

// GooglePlay 版本打包
/*
Task googlePlayTask = project.task('bundleGooglePlayLib') {
        project.ext.googlePlay = 'true'
        println "Package Google Play Bundle Release . . ."
}

project.tasks.whenTaskAdded { Task theTask ->
    if (theTask.name.endsWith('bundleRelease')) {
        // bundleGooglePlay.dependsOn(theTask)
        bundleGooglePlay.mustRunAfter(theTask)
        if (project.hasProperty("googlePlaySet"))
            return
        project.ext.googlePlaySet = 'true'
        project.tasks.first().dependsOn(googlePlayTask)
        project.tasks.first().mustRunAfter(googlePlayTask)
    }
}
*/
dependencies {
    if (rootProject.googlePlay) {
        println "Add lib libgoogle"
        implementation project(':libgooglemap')
        implementation project(':libbuglygoogle')
    } else {
        println "Add lib libcn"
        implementation project(':libgaodemap')
        implementation project(':libbuglycn')
    }
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    // 以上依赖Android系统
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.browser:browser:1.3.0'
    implementation 'androidx.vectordrawable:vectordrawable-animated:1.1.0'
    implementation 'androidx.mediarouter:mediarouter:1.2.0'
    implementation project(':ecg')
    implementation project(':common_m500_1000')
    implementation project(':bpm1000')
    implementation project(':simpleble')
    implementation project(':libbase')
    implementation project(':glu_phone')
    implementation project(':wuweikang')
    implementation project(':wheelpicker')
    implementation(name: 'bluetooth', ext: 'aar')
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'org.greenrobot:greendao:3.3.0'
    implementation 'org.greenrobot:greendao-generator:3.3.0'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'com.readystatesoftware.systembartint:systembartint:1.0.4'
    implementation 'com.afollestad.material-dialogs:core:3.3.0'
    implementation 'com.afollestad.material-dialogs:lifecycle:3.3.0'
    implementation 'com.romandanylyk:pageindicatorview:1.0.3'
    implementation 'com.roughike:bottom-bar:2.3.1'
    implementation 'com.nightonke:boommenu:2.1.1'
//    implementation 'com.github.yalantis:ucrop:2.2.5'
    implementation 'com.flipboard:bottomsheet-core:1.5.3'
    implementation 'com.flipboard:bottomsheet-commons:1.5.3'
    implementation 'com.github.dmytrodanylyk.circular-progress-button:library:1.1.3'
    implementation 'org.greenrobot:eventbus:3.2.0'
    implementation 'com.github.markushi:android-ui:1.2'
    implementation 'eu.the4thfloor.volley:com.android.volley:2015.05.28'
    implementation 'com.jiechic.library:xUtils:2.6.14'
    implementation 'com.squareup.okio:okio:2.9.0'
    implementation 'com.squareup:otto:1.3.8'
    implementation 'jp.wasabeef:recyclerview-animators:3.0.0'
    implementation 'com.balysv:material-ripple:1.0.2'
    implementation 'com.yanzhenjie:permission:2.0.3'
    implementation 'com.bm.photoview:library:1.4.1'
    implementation 'com.arialyy.aria:aria-core:3.5'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    annotationProcessor 'com.arialyy.aria:aria-compiler:3.5'
    // 网络请求
    implementation 'com.yanzhenjie.nohttp:nohttp:1.1.11'
    implementation 'com.yanzhenjie.nohttp:okhttp:1.1.11'
    implementation project(':w30sblelibrary')
    // 上下拉刷新
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.3'
    // 上下拉刷新Header,自带经典和贝塞尔雷达,其他样式才加这行
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-3'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    api 'com.github.LuckSiege.PictureSelector:picture_library:2.5.9'
}

android.applicationVariants.all { variant ->
    variant.outputs.all { output ->
        def outputFile = output.outputFile
        // println("outputFile.name : ${outputFile.name}")
        if (outputFile != null
                && (outputFile.name.endsWith('.apk') || outputFile.name.endsWith('.aab'))) {
            def fileName = outputFile.name;
            def tail
            if (fileName.endsWith('.apk')) {
                tail = ".apk"
            } else {
                tail = ".aab"
            }

            fileName = fileName.replace('app-app', "GuiderBand")

            if (android.defaultConfig.versionName != null) {
                fileName = fileName.replace(tail, "-${android.defaultConfig.versionName}${tail}")
            }

            if (variant.buildType.name.equals('release')) {
                def today = new Date().format('yyyyMMddHHmm');
                fileName = fileName.replace(tail, "-${today}${tail}")
            }

            if (project.googlePlay) {
                fileName = fileName.replace(tail, "-GooglePlay${tail}")
            } else {
                fileName = fileName.replace(tail, "-CN${tail}")
            }
            outputFileName = fileName
        }
    }
}

