apply plugin: 'com.android.library'

def andr = rootProject.ext.android
def appId = rootProject.ext.appId
def librarys = rootProject.ext.dependencies

android {
    compileSdkVersion andr.compileSdkVersion
    defaultConfig {
        //applicationId "com.guider.health.common"
        minSdkVersion andr.minSdkVersion
        targetSdkVersion andr.targetSdkVersion
        versionCode andr.versionCode
        versionName andr.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    defaultConfig {
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi','armeabi-v7a' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}
/*
Task googlePlayTask = project.task('bundleGooglePlayLib') {
    project.ext.googlePlay = 'true'
    println "Package Google Play Bundle Release . . ."
}

project.tasks.whenTaskAdded { Task theTask ->
    if (theTask.name.endsWith('bundleRelease')) {
        // bundleGooglePlay.dependsOn(theTask)
        // bundleGooglePlay.mustRunAfter(theTask)
        if (project.hasProperty("googlePlaySet"))
            return
        project.ext.googlePlaySet = 'true'
        project.tasks.first().dependsOn(googlePlayTask)
        project.tasks.first().mustRunAfter(googlePlayTask)
    }
}
*/
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    //retrofit2
    api 'com.squareup.retrofit2:retrofit:2.4.0'
//    compile 'com.squareup.retrofit2:converter-gson:2.4.0'
    //okhttp3
    api 'com.squareup.okhttp3:okhttp:3.10.0'
    api 'com.alibaba:fastjson:1.2.51'

    librarys.each { k, v -> api v }

    api project(':fragmentation_core')
    api 'joda-time:joda-time:2.9.4'

    implementation project(path: ':apilib')

    // DBFlow
    annotationProcessor "com.github.Raizlabs.DBFlow:dbflow-processor:4.2.1"
    implementation "com.github.Raizlabs.DBFlow:dbflow-core:4.2.1"
    implementation "com.github.Raizlabs.DBFlow:dbflow:4.2.1"

    // Dialog
    api 'com.flyco.dialog:FlycoDialog_Lib:1.3.2@aar'

    // Picasso
    api 'com.squareup.picasso:picasso:2.5.2'

    // 仿IOS联动选择器
    api 'com.contrarywind:Android-PickerView:4.1.8'

    if (rootProject.googlePlay) {
        println "Add lib libbuglygoogle"
        api project(':libbuglygoogle')
    } else {
        println "Add lib libbuglycn"
        api project(':libbuglycn')
    }
}