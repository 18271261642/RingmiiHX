apply plugin: 'com.android.library'

def andr = rootProject.ext.android
def appId = rootProject.ext.appId
def librarys = rootProject.ext.dependencies

android {
    compileSdkVersion andr.compileSdkVersion
    defaultConfig {
        //applicationId "com.guider.health.bluetooth"
        minSdkVersion andr.minSdkVersion
        targetSdkVersion 22
        versionCode andr.versionCode
        versionName andr.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
                arguments = [moduleName: project.getName()]
            }
        }

//        buildConfigField("boolean", "isLibrary", String.valueOf(isLibrary))
//
//        sourceSets{
//            main{
//                if (isLibrary){
//                    Manifest.srcFile 'src/main/lib_manifest/AndroidManifest.xml'
//                }else {
//                    Manifest.srcFile 'src/main/AndroidManifest.xml'
//                    java.srcDirs 'src/main/lib_manifest/java', 'src/main/java'
//
//                }
//            }
//        }

        sourceSets {
            main {
                jniLibs.srcDirs = ['libs']
            }
        }

    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }



}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //implementation 'com.android.support:design:27.0.0'
    //implementation 'com.android.support:appcompat-v7:26.1.0'
    //implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:appcompat-v7:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    //librarys.each { k, v -> api v }
//    annotationProcessor project(':arouter-compiler')
//    //api的方式有传递性
//    api project(':arouter-core')
    //api project(':common')
    if (isLibrary) {
//        implementation project(':arouter_a')
//        implementation project(':arouter_b')
    }
    //implementation files('libs/UsbDeviceLib.jar')
}
